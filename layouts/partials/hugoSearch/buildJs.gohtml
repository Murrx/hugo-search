{{ if (eq .Site.Hugo.Environment "development") }}
  {{ .Scratch.Set "opts" (dict "target" "es2017" "sourcemap" "inline") }}
{{ else }}
  {{ .Scratch.Set "opts" (dict "target" "es2017" "minify" "true") }}
{{ end }}

{{ $built := resources.Get "js/hugoSearch/main.ts" | js.Build (.Scratch.Get "opts") }}
<script type="text/javascript" src="{{ $built.RelPermalink }}"></script>
<script>
  HugoSearch.init({
    {{ with .Param "search.sections" }}
        sections: {{ . }}, 
    {{ else }}
        sections: {{ slice .Type }}, 
    {{ end }}
    {{ with .Param "search.fields" }}
      fields: {{ . }},
    {{ else }}
      fields: ["title", "description"],
    {{ end }}
    {{ with .Param "search.messages" }}
      messages:{
        welcomeMsg: {{ .Param "search.messages.welcome"}},
        emptyResultsMsg: {{ .Param "search.messages.empty"}},
        successMsg: {{ .Param "search.messages.success"}},
      }
    {{ else }}
      messages:{
        welcomeMsg: "default welcome message.",
        emptyResultsMsg: "default empty results message.",
        successMsg: "default success message."
      }
    {{ end}}
  });
</script>
